// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheRoadWarrior.Model;

namespace TheRoadWarrior.Data.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    partial class ReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("TheRoadWarrior.Model.AgencyUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AgencyUsers");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AgencyUserId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("AmountAlreadyPaid")
                        .HasColumnType("REAL");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observations")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AgencyUserId");

                    b.ToTable("Reservations");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Reservation");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TravellerUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TripName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TravellerUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TheRoadWarrior.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApiKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginHash")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.CarRentalReservation", b =>
                {
                    b.HasBaseType("TheRoadWarrior.Model.Reservation");

                    b.Property<string>("CarModel")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TripId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CarRentalReservation_TripId");

                    b.HasIndex("TripId");

                    b.HasDiscriminator().HasValue("CarRentalReservation");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.HotelReservation", b =>
                {
                    b.HasBaseType("TheRoadWarrior.Model.Reservation");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndingPeriod")
                        .HasColumnType("TEXT");

                    b.Property<string>("HotelName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartingPeriod")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TripId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("HotelReservation_TripId");

                    b.HasIndex("TripId");

                    b.HasDiscriminator().HasValue("HotelReservation");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.PlaneTicketReservation", b =>
                {
                    b.HasBaseType("TheRoadWarrior.Model.Reservation");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArrivingAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartingFrom")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TripId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("TripId");

                    b.HasDiscriminator().HasValue("PlaneTicketReservation");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.TravellerUser", b =>
                {
                    b.HasBaseType("TheRoadWarrior.User");

                    b.Property<string>("ReservationHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("TravellerUser");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.Reservation", b =>
                {
                    b.HasOne("TheRoadWarrior.Model.AgencyUser", "AgencyUser")
                        .WithMany()
                        .HasForeignKey("AgencyUserId");

                    b.Navigation("AgencyUser");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.Trip", b =>
                {
                    b.HasOne("TheRoadWarrior.Model.TravellerUser", null)
                        .WithMany("Trips")
                        .HasForeignKey("TravellerUserId");

                    b.HasOne("TheRoadWarrior.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.CarRentalReservation", b =>
                {
                    b.HasOne("TheRoadWarrior.Model.Trip", null)
                        .WithMany("CarRentalReservations")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.HotelReservation", b =>
                {
                    b.HasOne("TheRoadWarrior.Model.Trip", null)
                        .WithMany("HotelReservations")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.PlaneTicketReservation", b =>
                {
                    b.HasOne("TheRoadWarrior.Model.Trip", null)
                        .WithMany("PlaneTicketReservations")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.Trip", b =>
                {
                    b.Navigation("CarRentalReservations");

                    b.Navigation("HotelReservations");

                    b.Navigation("PlaneTicketReservations");
                });

            modelBuilder.Entity("TheRoadWarrior.Model.TravellerUser", b =>
                {
                    b.Navigation("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
